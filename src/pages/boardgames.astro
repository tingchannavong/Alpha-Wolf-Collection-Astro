---
import MainLayout from "../layouts/main-layout.astro";
import Card from "../components/game-card.astro";
import { handleSelectChange } from "../scripts/pagination.js"; // Import client-side function

// Fetch all games using Astro.glob
const allGames = await Astro.glob("./game-details/*");

// Get the current page from the query parameters (default to page 1)
const params = Astro.url.searchParams;
const currentPage = Number(params.get('page')) || 1;

// Get the number of games to display per page (from dropdown or default to 10)
const gamesPerPage = Number(params.get('show')) || 10;

// Calculate the total number of pages
const totalPages = Math.ceil(allGames.length / gamesPerPage);

// Calculate the slice indexes to show the correct games on the current page
const start = (currentPage - 1) * gamesPerPage;
const end = start + gamesPerPage;

// Slice the games array to only show the games for the current page
const paginatedGames = allGames.slice(start, end);
---
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/styles/alpha_style.css">
    <title>Board Games</title>
</head>

<MainLayout>
    <!-- To check what object the fronmatter contains print out the json file below-->
    <!-- {
        allGames.map( game => (
            <div>
                {JSON.stringify(game)}
            </div>   
        ))
    } -->
    <body>
        <section id="all-games-section" class="container">
            <h2>All Board Games</h2>
            <p>These are all the board games in Alpha Wolf's collection and their designated location. </p>
            <!-- Section for sort / filter functions -->
            <div class="sort-filter-container">
                <div class="sort">
                    <label for="sort-select">Sort by:</label>
                    <select id="sort-select">
                        <option value="a-z">A-Z</option>
                        <option value="z-a">Z-A</option>
                    </select>
                </div>
                <div class="filter">
                    <label for="category-select">Filter by Categories:</label>
                    <select id="category-select">
                        <option value="all">All Categories</option>
                        <option value="strategy">Strategy Games</option>
                        <option value="family">Family Games</option>
                        <option value="party">Party Games</option>
                        <!-- Add more categories as needed -->
                    </select>
                </div>
                <div class="filter">
                    <label for="category-select">Filter by Location:</label>
                    <select id="category-select">
                        <option value="MBL">Makerbox Laos</option>
                        <option value="Stella">Stella</option>
                        <option value="L6">Lak6</option>
                        <option value="NN">Nongnieng</option>
                        <!-- Add more categories as needed -->
                    </select>
                </div>
            </div>
        </section>
        <section id="game-cards-section" class="container">
            <!-- Game list starts here -->
            <div class="grid-list">
                <!-- Render paginated game items -->
                {paginatedGames.map((game) => (
                    <Card
                        title={game.frontmatter.title}
                        body={game.frontmatter.description}
                        href={game.url}
                        img={game.frontmatter.image}
                        category={game.frontmatter.category}
                        location={game.frontmatter.location}
                    />
                ))}
            </div>
        </section>
        <!-- Pagination Section -->
        <section class="pagination-section container">
            <!-- Dropdown for number of games per page -->
            <div class="show-results">
                <label for="show">Show:</label>
                <!-- Add client:load to make the onchange event interactive -->
                <select
                    id="show"
                    name="show"
                    client:load
                    onchange= handleSelectChange(event)
                >
                    <option value="10" selected={gamesPerPage === 10}>10</option>
                    <option value="20" selected={gamesPerPage === 20}>20</option>
                    <option value="30" selected={gamesPerPage === 30}>30</option>
                </select>
            </div>
            <div class="pagination">
                <button class="pagination-btn-next">{"<"}</button>
                {currentPage > 1 && (
                    <a href={`?page=${currentPage - 1}&show=${gamesPerPage}`} class="pagination-btn-next">
                        {"<"}
                    </a>
                )}
        
                {Array.from({ length: totalPages }).map((_, index) => (
                    <a
                        href={`?page=${index + 1}&show=${gamesPerPage}`}
                        class={index + 1 === currentPage ? 'pagination-btn active' : 'pagination-btn'}
                    >
                        {index + 1}
                    </a>
                ))}
        
                {currentPage < totalPages && (
                    <a href={`?page=${currentPage + 1}&show=${gamesPerPage}`} class="pagination-btn-next">
                        {">"}
                    </a>
                )}
            </div>
        </section>
    </body>
    
</MainLayout>
