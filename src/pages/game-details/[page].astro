---
import MainLayout from "../../layouts/main-layout.astro";
import Card from "../../components/game-card.astro";
import Pagination from "../../components/pagination.astro";

const defaultPageSize = 10;
const url = new URL(Astro.request.url);
// Get the pageSize from the query parameters
const pageSize = Number(url.searchParams.get('pageSize')) || defaultPageSize;
const allGames = await Astro.glob("./*.md");

export async function getStaticPaths({ paginate }) {
    const allGames = await Astro.glob("./*.md");
    return paginate(allGames, { pageSize: 10 });

}

const { page } = Astro.props;
const pathname = new URL(Astro.request.url).pathname.split('/');
console.log(pathname);
const firstPath = pathname[1];

// const firstPath = pathname.slice(1).join('/');
console.log(firstPath);

---
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/styles/alpha_style.css">
    <title>Board Games</title>
</head>

<MainLayout>
    <body>
        <section id="all-games-section" class="container">
            <h2>All Board Games</h2>
            <p>These are all the board games in Alpha Wolf's collection and their designated location. </p>
            <!-- Section for sort / filter functions -->
            <div class="sort-filter-container">
                <div class="sort">
                    <label for="sort-select">Sort by:</label>
                    <select id="sort-select">
                        <option value="a-z">A-Z</option>
                        <option value="z-a">Z-A</option>
                    </select>
                </div>
                <div class="filter">
                    <label for="category-select">Filter by Categories:</label>
                    <select id="category-select">
                        <option value="all">All Categories</option>
                        <option value="strategy">Strategy Games</option>
                        <option value="family">Family Games</option>
                        <option value="party">Party Games</option>
                        <!-- Add more categories as needed -->
                    </select>
                </div>
                <div class="filter">
                    <label for="category-select">Filter by Location:</label>
                    <select id="category-select">
                        <option value="MBL">Makerbox Laos</option>
                        <option value="Stella">Stella</option>
                        <option value="L6">Lak6</option>
                        <option value="NN">Nongnieng</option>
                        <!-- Add more categories as needed -->
                    </select>
                </div>
            </div>
        </section>
        <section id="game-cards-section" class="container">
            <!-- Game list starts here -->
            <div class="grid-list">
                <!-- Render paginated game items -->
                {page.data.map((game) => (
                    <Card
                        title={game.frontmatter.title}
                        body={game.frontmatter.description}
                        href={game.url}
                        img={game.frontmatter.image}
                        category={game.frontmatter.category}
                        location={game.frontmatter.location}
                    />
                ))}
            </div>
        </section>
        <!-- Pagination Section -->
        <section class="pagination-section container">
            <!-- Dropdown for number of games per page -->
            <div class="show-results">
                <label for="show">Show:</label>
                <select
                    id="show"
                    name="show"
                    onchange="updatePageSize()"
                >
                    <option value="10" selected={pageSize === 10}>10</option>
                    <option value="20" selected={pageSize === 20}>20</option>
                    <option value="30" selected={pageSize === 30}>30</option>
                    <option value="50" selected={pageSize === 50}>30</option>
                </select>

                <script>
                    function updatePageSize() {
                        const selectElement = document.getElementById('show')  as HTMLSelectElement;
                        const pageSize = selectElement.value;
                        // Reload the page with the new pageSize query parameter
                        const currentUrl = new URL(window.location.href);
                        currentUrl.searchParams.set('pageSize', pageSize);
                        window.location.href = currentUrl.toString();
                    }
                </script>
            </div>
            <div>
                {page.url.first ? <a href={page.url.first}> First Page</a>: null}
            </div>
            {allGames.length > 10 ? (
                <div>
                  <Pagination 
                    length={page.lastPage} 
                    currentUrl={page.url.current} 
                    currentPage={page.currentPage} 
                    firstUrl={`/${firstPath}`} 
                    prevUrl={page.url.prev} 
                    nextUrl={page.url.next} 
                    lastUrl={`/${firstPath}/${page.lastPage}`}
                  />
                </div>
              ) : null}
              <div>
                {page.url.last ? <a href={page.url.last}>Last Page</a> : null}
              </div>
        </section>
    </body>
    
</MainLayout>
